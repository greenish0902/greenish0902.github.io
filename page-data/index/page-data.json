{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"site":{"siteMetadata":{"title":"🧞‍♂️ Welcome to DEV.SH !"}},"allMarkdownRemark":{"nodes":[{"excerpt":"daily algorithm practice 문제 요약 [boj] 11052. 카드 구매하기 (node.js) 풀이 N개의 카드를 구매하려 한다. 배열에 순서대로 1장짜리 카도, 2장짜리 카드, …, k장짜리 카드의 판매 가격 배열이 주어질 때, N…","fields":{"slug":"/BOJ-11052/"},"frontmatter":{"date":"March 05, 2022","title":"[boj] 11052. 카드 구매하기 (node.js)","description":"Dynamic Programming"}},{"excerpt":"daily algorithm practice 문제 요약 [boj] 1463. 1로 만들기 (node.js) 입력으로 들어오는 정수 X에 대해 가능한 연산들은 아래와 같다. (1 <= X <= 10^6) 3으로 나누어 떨어지면 -> 이 수를…","fields":{"slug":"/BOJ-1463/"},"frontmatter":{"date":"March 04, 2022","title":"[boj] 1463. 1로 만들기 (node.js)","description":"Dynamic Programming"}},{"excerpt":"daily algorithm practice 문제 요약 [boj] 1759. 암호 만들기 (node.js) C개의 서로 다른 문자들이 주어질 때, 주어진 규칙을 만족하는 L 자릿수 암호의 후보들을 출력하는 문제 풀이 Brute Force…","fields":{"slug":"/BOJ-1759/"},"frontmatter":{"date":"March 03, 2022","title":"[boj] 1759. 암호 만들기 (node.js)","description":"Brute Force"}},{"excerpt":"daily algorithm practice 문제 요약 [boj] 1916. 최소비용 구하기 (node.js…","fields":{"slug":"/BOJ-1916/"},"frontmatter":{"date":"March 03, 2022","title":"[boj] 1916. 최소비용 구하기 (node.js)","description":"Dijkstra, Priority Queue"}},{"excerpt":"Semaphores, Implementation, Classical Problems of Syncronization, Bounded-Buffer Problem, Readers-Writers Problem, Dining-Philosophers…","fields":{"slug":"/14-Process_Synchronization_3/"},"frontmatter":{"date":"March 02, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 14. Process Synchronization 3","description":"Classical Problems of Synchronization: Bounded Buffer Problem, Readers-Writers Problem, Dining-Philosophers Problem // Monitor"}},{"excerpt":"daily algorithm practice 문제 요약 [boj] 3055. 탈출 (node.js) 고슼도치가 비버 굴로 탈출 가능한 최단 시간을 출력하라! 탈출 불가시 “KAKTUS” 출력 풀이 BFS: 이동 가능한 4방향에 대해 탐색 if…","fields":{"slug":"/BOJ-3055/"},"frontmatter":{"date":"March 01, 2022","title":"[boj] 3055. 탈출 (node.js)","description":"BFS"}},{"excerpt":"반효경 [운영체제] 13. Process Synchronization 2 Semaphores, Critical Section of n Processes, Block / Wakeup Implementation, Implementation, Two…","fields":{"slug":"/13-Process_Synchronization_2/"},"frontmatter":{"date":"February 28, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 13. Process Synchronization 2","description":"Semaphores, busy-waiting, block & wakeup, deadlock, starvation"}},{"excerpt":"문제 요약 [boj] 21919. 소수 최소 공배수 (node.js) 주어진 숫자들 중 소수인 수들의 최소 공배수 구하기 풀이  이다. 따라서 먼저 소수들을 구한 후, 유클리드 호제법으로 GCD 함수를 구현하고,  임을 활용하여 LCM…","fields":{"slug":"/BOJ-21919/"},"frontmatter":{"date":"February 25, 2022","title":"[boj] 21919. 소수 최소 공배수 (node.js)","description":"Math: 유클리드 호제법, GCD, LCM"}},{"excerpt":"컴퓨터 시스템 데이터의 접근 일반적인 접근 데이터 저장된 위치에서 읽어와서 연산된 결과를 다시 위치에 저장(반영) 누가 먼저 읽어갔느냐에 따른 결과 변동 가능성 ⇒ Process Synchronization 문제 발생 관점 CPU…","fields":{"slug":"/12-Process_Synchronization_1/index01/"},"frontmatter":{"date":"February 24, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 12. Process Synchronization 1","description":"데이터 접근, race condition, critical section"}},{"excerpt":"문제 요약 [boj] 1697. 숨바꼭질 (node.js) 주어진 두 지점 간 이동방법이 3가지로 정해져 있을 때, 시작점부터 도착점에 도달 가능한 최단 시간은? 풀이…","fields":{"slug":"/BOJ-1697/"},"frontmatter":{"date":"February 24, 2022","title":"[boj] 1697. 숨바꼭질 (node.js)","description":"BFS"}},{"excerpt":"CPU-burst Time의 분포, Schedulling Algorithms, Round Robin(RR), Multilevel Queue, Multilevel Feedback Queue, Multi-Processor Scheduling, Real…","fields":{"slug":"/11-CPU_Scheduling_2/"},"frontmatter":{"date":"February 23, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 11. CPU Scheduling 2","description":"CPU 스케줄링, Multilevel Queue, Algorithm Evaluation"}},{"excerpt":"문제 요약 [boj] 1012. 유기농 배추 (node.js…","fields":{"slug":"/BOJ-1012/"},"frontmatter":{"date":"February 23, 2022","title":"[boj] 1012. 유기농 배추 (node.js)","description":"DFS"}},{"excerpt":"CPU and I/O Bursts in Program Execution, CPU-burst Time의 분포, CPU Scheduler & Dispatcher, Scheduling Algorithms, Scheduling Criteria, FCFS…","fields":{"slug":"/10-CPU_Scheduling_1/"},"frontmatter":{"date":"February 22, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 10. CPU Scheduling 1","description":"CPU 스케줄링, 스케줄링 알고리즘"}},{"excerpt":"문제 요약 [boj] 1005. ACM Craft (node.js…","fields":{"slug":"/BOJ-1005/"},"frontmatter":{"date":"February 22, 2022","title":"[boj] 1005. ACM Craft (node.js)","description":"위상 정렬 (Topological Sort)"}},{"excerpt":"문제 요약 [boj] 1389. 케빈 베이컨의 6단계 법칙 (node.js) 풀이 BFS로 각각의 거리를 계산하고 저장해준 후 최소 거리를 가지는 사람의 인덱스를 출력 ‘최단 거리’ 문제는 BFS를 활용해야 동일 depth…","fields":{"slug":"/BOJ-1389/"},"frontmatter":{"date":"February 21, 2022","title":"[boj] 1389. 케빈 베이컨의 6단계 법칙 (node.js)","description":"BFS"}},{"excerpt":"프로세스 생성 COW: Copy-on-Write 기법 운영체제, 메모리 관리, 파일시스템에 자주 등장하는 개념 write가 발생했을 때 copy 하겠다는 의미로, 내용이 바뀔 때 (부모의 code, data, stack…","fields":{"slug":"/09-Process_Management_2/"},"frontmatter":{"date":"February 18, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 9. Process Management 2","description":"프로세스 생성, 시스템 콜, 프로세스 간 협력"}},{"excerpt":"문제 요약 [boj] 10816. 숫자 카드 2 (node.js) 가지고 있는 숫자 카드들의 목록이 주어진다. 정수 M…","fields":{"slug":"/BOJ-10816/"},"frontmatter":{"date":"February 18, 2022","title":"[boj] 10816. 숫자 카드 2 (node.js)","description":"이분 탐색 (Binary Search)"}},{"excerpt":"문제 요약 [boj] 1068. 트리 (node.js) 입력: 트리의 노드의 개수 N, 0 ~ N-1번 노드의 부모 노드의 번호, 삭제할 노드 번호가 주어진다. 출력: 리프 노드의 개수를 출력하라. 부모가 -…","fields":{"slug":"/BOJ-1068/"},"frontmatter":{"date":"February 16, 2022","title":"[boj] 1068. 트리 (node.js)","description":"트리 (Tree)"}},{"excerpt":"프로세스 생성 (Creation) 프로세스의 생성: 부모 프로세스가 자식 프로세스 복제 생성 일반적으로 자원 공유하지 않음 여러 개 만들 수 있어서 트리 형태로 계층 구조를 형성 수행: 부모와 자식의 공존, 자식의 종료(terminate…","fields":{"slug":"/08-Process_Management_1/"},"frontmatter":{"date":"February 15, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 8. Process Management 1","description":"프로세스의 생성과 종류"}},{"excerpt":"문제 요약 [boj] 3273. 두 수의 합 (node.js) 수열의 크기와 수열, 숫자 x가 주어진다. 서로 다른 두 수의 합이 x가 되는 쌍의 개수를 구하라. 풀이 이분 탐색의 조건을 활용해서 수열의 각 원소마다 그 원소와 합했을 때 x…","fields":{"slug":"/BOJ-3273/"},"frontmatter":{"date":"February 15, 2022","title":"[boj] 3273. 두 수의 합 (node.js)","description":"이분 탐색 (Binary Search)"}},{"excerpt":"복습 - 동기식 vs 비동기식 동기식 입출력 입출력 수행하는 동안 입출력을 요청한 프로세스가 입출력 끝날때까지 아무것도 하지 않고 기다려야 하면 동기식! 두 종류로 구분 CPU를 아무것도 하지 않지만 잡고서 입출력이 끝날 때까지 기다리는 상태 CPU…","fields":{"slug":"/06_07-Process_2_3/"},"frontmatter":{"date":"February 14, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 6. Process2, 7. Process3","description":"Process: 문맥, 상태, 문맥 교환, 스케줄러"}},{"excerpt":"문제 요약 [boj] 16472. 고냥이 (node.js) 숫자 N과 문자열이 주어진다. 주어진 문자열에서 최대 N 종류의 알파벳이 인식 가능할 때, 인식 가능한 문자열의 최대 길이를 찾아라 풀이 두 포인터 L, R…","fields":{"slug":"/BOJ-16472/"},"frontmatter":{"date":"February 14, 2022","title":"[boj] 16472. 고냥이 (node.js)","description":"두 포인터 (Two Pointer)"}},{"excerpt":"프로세스 프로세스: 실행 중인 프로그램 프로세스의 문맥: 특정 시점에서의 CPU 수행 상태를 나타내는 하드웨어 문맥 프로세스의 문맥 (Context) 프로세스의 상태를 알기 위해 필요한 모든 요소들을 뜻하며, 하드웨어 문맥: CPU…","fields":{"slug":"/05-Process_1/"},"frontmatter":{"date":"February 13, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 5. Process1","description":"Process: 문맥, 상태, 문맥 교환, 스케줄러"}},{"excerpt":"문제 요약 [boj] 2470. 두 용액 (node.js) 주어진 숫자들 중 서로 다른 두 개를 조건에 맞게 출력하는 문제 조건: 합이 0이거나 0에 가장 가까운 조합 찾기 풀이 일반적으로 이분 탐색으로 조건(최소 거리 갱신)과 L, R…","fields":{"slug":"/BOJ-2470/index02/"},"frontmatter":{"date":"February 13, 2022","title":"[boj] 2470. 두 용액 (node.js)","description":"두 포인터 (Two Pointer)"}},{"excerpt":"…","fields":{"slug":"/04-System_Program_2/"},"frontmatter":{"date":"February 12, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 4. System Structure & Program Execution 2","description":"입출력, 저장장치 계층구조"}},{"excerpt":"문제 요약 [boj] 1253. 좋다 (node.js) 입력: N…","fields":{"slug":"/BOJ-1253/"},"frontmatter":{"date":"February 12, 2022","title":"[boj] 1253. 좋다 (node.js)","description":"투 포인터 (Two Pointer)"}},{"excerpt":"Mode bit CPU를 돕는 보호 장치로써의 기능을 한다. mode bit 는 두 가지 모드가 있다. 0 (모니터 모드): OS 코드 수행 (= 커널 모드, 시스템 모드)…","fields":{"slug":"/03-System_Program_1/index_02/"},"frontmatter":{"date":"February 11, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 3. System Structure & Program Execution 1","description":"컴퓨터 시스템의 구조 - 세부 항목들: Mode bit, Timer, Device Controller, I/O Process, System Call, Interrupt"}},{"excerpt":"문제 요약 [boj] 2110. 공유기 설치 (node.js…","fields":{"slug":"/BOJ-2110/"},"frontmatter":{"date":"February 11, 2022","title":"[boj] 2110. 공유기 설치 (node.js)","description":"이분 탐색 (Binary Search)"}},{"excerpt":"컴퓨터 시스템 크게 Host(Computer) 과 I/O(Input/Output) Device로 분류할 수 있다. Computer: CPU, Memory I/O Device: Disk(하드디스크), 키보드, 프린터, 모니터 등의 입출력장치 Host…","fields":{"slug":"/03-System_Program_1/"},"frontmatter":{"date":"February 10, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 3. System Structure & Program Execution 1","description":"컴퓨터 시스템의 구조와 상호작용"}},{"excerpt":"문제 요약 BOJ 2805 나무 자르기 풀이 이분탐색 알고리즘을 구현한다. 이때 L, R을 한 칸씩 이동하기 위한 내부 조건으로 해당(mid)부터 나무를 잘랐을 때 원하는 값보다 크거나 같으면 1, 작으면 0을 반환하는 bool…","fields":{"slug":"/BOJ-2805/"},"frontmatter":{"date":"February 10, 2022","title":"[boj] 2805. 나무 자르기 (node.js)","description":"이분 탐색 (Binary Search)"}},{"excerpt":"문제 요약 BOJ 1011 Fly me to the Alpha Centauri…","fields":{"slug":"/BOJ-1011/"},"frontmatter":{"date":"February 09, 2022","title":"[boj] 1011. Fly me to the Alpha Centauri (node.js)","description":"daily algorithm practice"}},{"excerpt":"문제 요약 BOJ 11057 오르막 수 오르막 수는 수의 자리가 오름차순을 이루는 수를 말한다. 입력: 오르막 수의 길이 N이 주어질 때 출력: 오르막 수의 개수를 구하라 인접한 수가 같아도 오름차순으로 친다. 수는…","fields":{"slug":"/BOJ-11057/"},"frontmatter":{"date":"February 08, 2022","title":"[boj] 11057. 오르막 수","description":"동적 프로그래밍 (Dynamic Programming)"}},{"excerpt":"운영체제란? 정의 협의의 운영체제는 “커널” 을 가리키며 커널: 부팅 이후로 메모리에 상주하는 부분 광의의 운영체제는 커널 + 유틸리티를 의미한다. 운영체제의 목적 주된 목적: 하드웨어, 자원의 효율적 관리 자원 CPU, 메모리, 입출력장치(I/O…","fields":{"slug":"/02-Introduction/"},"frontmatter":{"date":"February 08, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 2. Introduction to Operating Systems","description":"운영체제란, 목적, 역할, 구조, 헷갈리는 용어"}},{"excerpt":"운영체제 (Operating System, OS…","fields":{"slug":"/01-Introduction/"},"frontmatter":{"date":"February 08, 2022","title":"[KOCW] 운영체제 (반효경, 2014) - 1.1 강의소개","description":"운영체제를 바라보는 관점, 목표, 그 역할"}},{"excerpt":"문제 요약 BOJ 194…","fields":{"slug":"/BOJ-1949/BOJ-1949/"},"frontmatter":{"date":"February 08, 2022","title":"[boj] 1949. 우수 마을 (node.js)","description":"동적 프로그래밍 (Dynamic Programming)"}},{"excerpt":"문제 요약 BOJ 2579 계단 오르기 입력: 계단의 총 개수와 각 계단을 밟으면 얻을 수 있는 점수가 주어진다. 출력: 얻을 수 있는 최대 점수는? 한 번에 한 계단씩 또는 두 계단씩만 오를 수 있다. 시작 게단을 제외하고…","fields":{"slug":"/BOJ-2579/BOJ-2579/"},"frontmatter":{"date":"February 07, 2022","title":"[boj] 2579. 계단 오르기 (node.js)","description":"동적 프로그래밍 (Dynamic Programming)"}},{"excerpt":"문제 요약 BOJ 9095 1, 2, 3 더하기 입력: 테스트 케이스의 개수와 정수가 주어진다. 출력: 1, 2,…","fields":{"slug":"/BOJ-9095/BOJ-9095/"},"frontmatter":{"date":"February 06, 2022","title":"[boj] 9095. 1, 2, 3 더하기 (node.js)","description":"동적 프로그래밍 (Dynamic Programming)"}},{"excerpt":"문제 요약 BOJ 2470 줄 세우기 입력: N개의 숫자가 주어진다. 출력: 주어진 숫자들 중 합했을 때 0에 가장 가까운 수를 만드는 서로 다른 두 수를 출력하라. 풀이 이분 탐색의 입력값으로 주어진 수에 반대 부호를 붙여 합이…","fields":{"slug":"/BOJ-2470/"},"frontmatter":{"date":"February 05, 2022","title":"[boj] 2470. 줄 세우기 (node.js)","description":"이분 탐색 (Binary Search)"}},{"excerpt":"문제 요약 입력: A, B 집합을 구성하는 각각의 원소들이 주어질 때 조건: A가 B보다 큰 출력: (A, B) 원소의 조합의 개수를 출력 풀이 접근 B보다 큰 A의 원소의 개수를 for문을 돌면서 세면 된다. 이때 B배열을 정렬 완료된 상태에서 A…","fields":{"slug":"/BOJ-7795/boj-7795/"},"frontmatter":{"date":"January 28, 2022","title":"[boj] 7795. 먹을 것인가 먹힐 것인가 (node.js)","description":"이분 탐색(Binary Search)"}}]}},"pageContext":{}},
    "staticQueryHashes": ["230163734","2841359383"]}