{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/Programmers-js/Level01/keypad/",
    "result": {"data":{"site":{"siteMetadata":{"title":"🧞‍♂️ Welcome to DEV.SH !"}},"markdownRemark":{"id":"c54ec835-5bd9-5315-ba3d-189c652ef749","excerpt":"daily algorithm practice 문제 https://programmers.co.kr/learn/courses/30/lessons/67256 202…","html":"<p><img src=\"../../../src/images/dailyAlgorithmPractice/june_22.png\" alt=\"daily algorithm practice\"></p>\n<h1>문제</h1>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/67256\">https://programmers.co.kr/learn/courses/30/lessons/67256</a></p>\n<ul>\n<li>2020 카카오 인턴십 문제</li>\n</ul>\n<h1>풀이</h1>\n<ul>\n<li>입력의 경우에 맞게끔 처리해주면 되는 문제다.</li>\n<li>두 키 사이의 거리는 맨하탄 거리이다. 따라서 키를 입력받으면 [행, 열] 좌표를 반환할 수 있도록 함수를 구현해서 맨하탄 거리를 계산하도록 처리했다.</li>\n</ul>\n<h3>전체 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numbers<span class=\"token punctuation\">,</span> hand</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 6/6 (월) 19:13 ~</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>curLeft<span class=\"token punctuation\">,</span> curRight<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> keypad <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    keypad<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span>\n    j<span class=\"token operator\">++</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      i<span class=\"token operator\">++</span>\n      j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">+=</span> <span class=\"token function\">getFinger</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hand<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getFinger</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> hand</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>\n        curLeft <span class=\"token operator\">=</span> num\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"L\"</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span>\n        curRight <span class=\"token operator\">=</span> num\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"R\"</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">nearest</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> hand<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          curLeft <span class=\"token operator\">=</span> num\n          <span class=\"token keyword\">return</span> <span class=\"token string\">\"L\"</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          curRight <span class=\"token operator\">=</span> num\n          <span class=\"token keyword\">return</span> <span class=\"token string\">\"R\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">nearest</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> hand</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> left <span class=\"token operator\">=</span> <span class=\"token function\">getDist</span><span class=\"token punctuation\">(</span>keypad<span class=\"token punctuation\">[</span>curLeft<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keypad<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> right <span class=\"token operator\">=</span> <span class=\"token function\">getDist</span><span class=\"token punctuation\">(</span>keypad<span class=\"token punctuation\">[</span>curRight<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keypad<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> left <span class=\"token operator\">===</span> right <span class=\"token operator\">?</span> hand <span class=\"token operator\">:</span> left <span class=\"token operator\">&lt;</span> right <span class=\"token operator\">?</span> <span class=\"token string\">\"left\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"right\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getDist</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cur<span class=\"token punctuation\">,</span> end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> end<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> end<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[프로그래머스 1단계] 키패드 누르기 (javascript)","date":"220606 Mon","description":""}},"previous":{"fields":{"slug":"/BOJ-node-js/BOJ-11660/"},"frontmatter":{"title":"11660. 구간 합 구하기 5 (node.js)"}},"next":{"fields":{"slug":"/Programmers-js/Level01/caesarCode/"},"frontmatter":{"title":"[프로그래머스 1단계] 시저 암호 (javascript)"}}},"pageContext":{"id":"c54ec835-5bd9-5315-ba3d-189c652ef749","previousPostId":"a605b37d-7d19-55a1-b10c-9456b96f0ddd","nextPostId":"abf6966e-de5d-522c-b9ca-8900d97a0595"}},
    "staticQueryHashes": ["230163734","2841359383"]}