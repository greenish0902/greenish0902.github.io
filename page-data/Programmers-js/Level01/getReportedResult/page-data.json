{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/Programmers-js/Level01/getReportedResult/",
    "result": {"data":{"site":{"siteMetadata":{"title":"🧞‍♂️ Welcome to DEV.SH !"}},"markdownRemark":{"id":"6b501f64-9763-56b1-8301-6c79d4324b40","excerpt":"문제 https://programmers.co.kr/learn/courses/30/lessons/92334 2022 KAKAO BLIND RECRUITMENT 문제다. 해결 논리는 평이한데, 전체 테스트케이스 중…","html":"<h1>문제</h1>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/92334\">https://programmers.co.kr/learn/courses/30/lessons/92334</a></p>\n<ul>\n<li>2022 KAKAO BLIND RECRUITMENT 문제다.</li>\n<li>해결 논리는 평이한데, 전체 테스트케이스 중 2개만 맞고 계속 틀려서 수정에 수정을 거듭해 해결한 문제.</li>\n</ul>\n<h1>풀이</h1>\n<ul>\n<li>세 개의 매개변수가 있다. 첫 번째 매개변수는 배열이다.</li>\n<li>답을 반환할 때, 이 첫 번째 매개변수에 제시된 이름의 순서대로 매치되게끔 답을 반환해야 한다. 나는 임의로 동일한 길이의 배열을 생성한 후, 0으로 초기화한 다음 이를 활용했는데 그 과정에서 문제에서 제시된 테스트케이스 이외에 문제가 발생했다.</li>\n<li>입력받은 매개변수를 <code class=\"language-text\">const result = [...id_list].fill(0);</code> 방식으로 수정해서 문제를 해결했다.</li>\n<li>지난 주에 Set를 연습해둔 덕분에 중복 제거에 활용할 수 있었다. 😆</li>\n</ul>\n<h3>전체 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id_list<span class=\"token punctuation\">,</span> report<span class=\"token punctuation\">,</span> k</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> reported <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>id_list<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// users init</span>\n  id_list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  report<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n    users<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// reported count</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>users<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cur</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>reported<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> reported<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">else</span> reported<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// get result</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>users<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">repUser</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>reported<span class=\"token punctuation\">[</span>repUser<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> k<span class=\"token punctuation\">)</span> result<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[프로그래머스 1단계] 신고 결과 받기 (javascript)","date":"220606 Mon","description":""}},"previous":{"fields":{"slug":"/BOJ-node-js/BOJ-16194/"},"frontmatter":{"title":"[boj] 16194. 카드 구매하기 2 (node.js)"}},"next":{"fields":{"slug":"/BOJ-node-js/BOJ-11660/"},"frontmatter":{"title":"11660. 구간 합 구하기 5 (node.js)"}}},"pageContext":{"id":"6b501f64-9763-56b1-8301-6c79d4324b40","previousPostId":"1f39f354-060c-57a9-a334-1e5880370478","nextPostId":"a605b37d-7d19-55a1-b10c-9456b96f0ddd"}},
    "staticQueryHashes": ["230163734","2841359383"]}